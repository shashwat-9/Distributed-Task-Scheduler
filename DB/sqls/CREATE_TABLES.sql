CREATE TABLE SCHEDULED_TASKS (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    TASK_TYPE VARCHAR(255) NOT NULL,
    SCHEDULED_TIME TIME NOT NULL,
    EXECUTION_FREQUENCY VARCHAR(12) NOT NULL CHECK (EXECUTION_FREQUENCY IN ('DAILY', 'WEEKLY', 'MONTHLY', 'CUSTOM')),
    CYCLE_LENGTH INTEGER CHECK(EXECUTION_FREQUENCY = 'CUSTOM'),
    EXECUTION_DAYS TEXT NOT NULL,
    BASE_DATE DATE,
    TASK JSONB NOT NULL
);

/*
T(id, name, cmd, task_type, scheduled_time, execution_frequency, cycle_length, base_date, execution_days)
  - everything related to execution, like the cmds, retrials, no_of_retires etc specified in json
*/

CREATE TABLE TRIGGERED_TASK (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    TASK_TYPE VARCHAR(255) NOT NULL,
    TASK JSONB NOT NULL
);

CREATE TABLE EXECUTION_TABLE (
    ID SERIAL PRIMARY KEY,
    TASK_TYPE VARCHAR(255) NOT NULL,
    TASK JSONB NOT NULL,
    SCHEDULED_TIME TIME,
    STATUS VARCHAR(32) DEFAULT 'PENDING' CHECK (STATUS IN ('PENDING', 'SUCCESS', 'FAILED', 'IN PROGRESS')),
    SCHEDULED_TASK_ID INTEGER REFERENCES SCHEDULED_TASKS(ID),
    TRIGGERED_TASK_ID INTEGER REFERENCES TRIGGERED_TASK(ID),
    LOG_LOCATION TEXT,
    CONSTRAINT only_one_foreign_key CHECK ((TRIGGERED_TASK_ID IS NULL AND SCHEDULED_TASK_ID IS NOT NULL) OR (TRIGGERED_TASK_ID IS NOT NULL AND SCHEDULED_TASK_ID IS NULL))
);