CREATE TABLE SCHEDULED_TASKS (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    CRON_SCHEDULE TEXT NOT NULL,    -- 0/n(0 for standard,n for custom cycle) *(Minute) *(Hour) *(Day) *(Month) *(WeekDay)
    START_DATE DATE NOT NULL,
    TASK JSONB NOT NULL,
    CREATED_AT DATE DEFAULT CURRENT_DATE,
    IS_ACTIVE BOOLEAN DEFAULT TRUE
);

-- The cron expression is supporting discrete values with comma-separated values (e.g. 1,2,4)

CREATE TABLE TRIGGERED_TASK (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    TASK JSONB NOT NULL
);

CREATE TABLE SCHEDULED_TASKS_EXECUTION (
    ID SERIAL PRIMARY KEY,
--     TASK JSONB NOT NULL,
    SCHEDULED_TIME TIME,
    COMPLETION_TIME TIME,
    EXECUTION_DATE DATE NOT NULL,
    STATUS CHARACTER DEFAULT 'A' CHECK (STATUS IN ('A', 'S', 'F', 'P')),    --AWAITED, SUCCESS, FAILURE, PROGRESS
    RETRIED INTEGER DEFAULT 0,
    SCHEDULED_TASK_ID INTEGER REFERENCES SCHEDULED_TASKS(ID) ON DELETE CASCADE,
    LOG_LOCATION TEXT
) PARTITION BY RANGE (EXECUTION_DATE);

CREATE TABLE TRIGGERED_TASKS_EXECUTION (
    ID SERIAL PRIMARY KEY,
--     TASK JSONB NOT NULL,
    STATUS CHARACTER DEFAULT 'A' CHECK (STATUS IN ('A', 'S', 'F', 'P')),    --AWAITED, SUCCESS, FAILURE, PROGRESS
    START_TIME TIME,
    COMPLETION_TIME TIME,
    EXECUTION_DATE DATE NOT NULL,
    RETRIED INTEGER DEFAULT 0,
    TRIGGERED_TASK_ID INTEGER REFERENCES TRIGGERED_TASK(ID) ON DELETE CASCADE,
    LOG_LOCATION TEXT
) PARTITION BY RANGE (EXECUTION_DATE);